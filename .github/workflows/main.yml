name: CI/CD API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test-env-variables:
    runs-on: ubuntu-latest
    steps:
        - name: "Check out code"
          uses: actions/checkout@v3

        - name: "Display environment variables"
          run: |
            echo "MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}"
            echo "MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}"

  symfony-tests:
    runs-on: ubuntu-latest
    services:
        mysql:
            image: mysql:8.0
            env:
                MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
                MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
            ports:
                - 3306:3306
            options: >-
                --health-cmd="mysqladmin ping --silent"
                --health-interval=10s
                --health-timeout=5s
                --health-retries=3
    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate SSL Key for JWT
        run: php bin/console lexik:jwt:generate-keypair

      - name: Wait for MySQL to be ready
        run: |
          dockerize -wait tcp://localhost:3306 -timeout 1m

      - name: Create Database
        run: php bin/console doctrine:database:create --env=test

      - name: Migrate database 
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

    #   - name: Load fixtures
    #     run: php bin/console doctrine:fixtures:load --no-interaction --env=test

    #   - name: Execute tests (Unit and Feature tests) via PHPUnit
    #     env:
    #       DATABASE_URL: mysql://root:root@127.0.0.1:3306/test_db
    #     run: vendor/bin/phpunit